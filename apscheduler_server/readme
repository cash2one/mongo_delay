启动说明：
    run.py是总程序入口。
    第一次运行该脚本，应先运行install_module.py脚本，下载脚本依赖的第三方库。



为了使任务属性的时间与apscheduler的时间一致，都采用datetime 时间


细节部分，服务器在删除总任务时应该记录，告知客户端删除

ERROR.txt是记录错误日志的



关于apscheduler_server 目录结构说明：


1:zmq_interface #该目录下的interface.py用zmq实现的与服务器通信的接口（可被web替换）

2：apscheduler_server #任务调度中心服务器功能目录
#目前服务器端与客户端支持zmq,http通信，介于zmq现存在的断连问题（客户端针对该问题进行了一些检测机制可以避免），建议选择http通信
#服务器端与客户端的通信方式必须保持一致

                                               |-----interface.py 服务器对外接口脚本，该目录与服务器通过网络通信，可以任意存放
                  |------------zmq_interface-- |
                  |                            |-----myapp.log   interface.py脚本中预留的记录日志接口的记录文档
                  |
                  |------------http_server.py 任务调度中心服务器和客户端的通信接口（http实现，可通过配置文件选择）
                  |
                  |------------zmq_server.py  任务调度中心服务器和客户端的通信接口 （zmq实现的，可通过配置文件选择）
apscheduler_server|
                  |------------aps_server.py 任务就绪，任务超时的逻辑部分
                  |
                  |------------获取代理（预留）
                  |
                  |------------获取 cookie（预留）
                  |
                  |
                  |-------------other
                  |
                  |-------------run.py 程序入口
                  |
                  |
                  |-------------install_module.py 下载脚本依赖的第三方脚本
                  |
                  |
                  |-------------setting.py 总配置文件

关于数据存储：
目前采用的方案：所有的数据都会存储到setting.py文件配置的数据库中，各个类型的数据根据任务类型存储到与该类型相同表名的的数据表中。